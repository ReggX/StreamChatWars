import abc
from abc import ABC, abstractmethod
from typing import Any

def check_err(err) -> None: ...

class VBus:
    def __init__(self) -> None: ...
    def get_busp(self): ...
    def __del__(self) -> None: ...

VBUS: Any

class VGamepad(ABC, metaclass=abc.ABCMeta):
    vbus: Any
    def __init__(self) -> None: ...
    def __del__(self) -> None: ...
    def get_vid(self): ...
    def get_pid(self): ...
    def set_vid(self, vid) -> None: ...
    def set_pid(self, pid) -> None: ...
    def get_index(self): ...
    def get_type(self): ...
    @abstractmethod
    def target_alloc(self): ...

class VX360Gamepad(VGamepad):
    report: Any
    def __init__(self) -> None: ...
    def get_default_report(self): ...
    def reset(self) -> None: ...
    def press_button(self, button: int) -> None: ...
    def release_button(self, button: int) -> None: ...
    def left_trigger(self, value: int) -> None: ...
    def right_trigger(self, value: int) -> None: ...
    def left_trigger_float(self, value_float: float) -> None: ...
    def right_trigger_float(self, value_float: float) -> None: ...
    def left_joystick(self, x_value: int, y_value: int) -> None: ...
    def right_joystick(self, x_value: int, y_value: int) -> None: ...
    def left_joystick_float(self, x_value_float: float, y_value_float: float) -> None: ...
    def right_joystick_float(self, x_value_float: float, y_value_float: float) -> None: ...
    def update(self) -> None: ...
    def target_alloc(self): ...

class VDS4Gamepad(VGamepad):
    report: Any
    def __init__(self) -> None: ...
    def get_default_report(self): ...
    def reset(self) -> None: ...
    def press_button(self, button) -> None: ...
    def release_button(self, button) -> None: ...
    def press_special_button(self, special_button) -> None: ...
    def release_special_button(self, special_button) -> None: ...
    def left_trigger(self, value) -> None: ...
    def right_trigger(self, value) -> None: ...
    def left_trigger_float(self, value_float) -> None: ...
    def right_trigger_float(self, value_float) -> None: ...
    def left_joystick(self, x_value, y_value) -> None: ...
    def right_joystick(self, x_value, y_value) -> None: ...
    def left_joystick_float(self, x_value_float, y_value_float) -> None: ...
    def right_joystick_float(self, x_value_float, y_value_float) -> None: ...
    def directional_pad(self, direction) -> None: ...
    def update(self) -> None: ...
    def update_extended_report(self, extended_report) -> None: ...
    def target_alloc(self): ...
