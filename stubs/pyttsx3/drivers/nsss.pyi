from Foundation import *
from ..voice import Voice as Voice
from collections.abc import Generator

def buildDriver(proxy): ...

class NSSpeechDriver(NSObject):
    def initWithProxy(self, proxy): ...
    def destroy(self) -> None: ...
    def onPumpFirst_(self, timer) -> None: ...
    def startLoop(self) -> None: ...
    def endLoop(self) -> None: ...
    def iterate(self) -> Generator[None, None, None]: ...
    def say(self, text) -> None: ...
    def stop(self) -> None: ...
    def getProperty(self, name): ...
    def setProperty(self, name, value) -> None: ...
    def save_to_file(self, text, filename) -> None: ...
    def speechSynthesizer_didFinishSpeaking_(self, tts, success) -> None: ...
    def speechSynthesizer_willSpeakWord_ofString_(self, tts, rng, text) -> None: ...
